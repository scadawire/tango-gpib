static const char *RcsId = "$Header: /users/chaize/newsvn/cvsroot/Communication/Gpib/src/GpibDeviceServerStateMachine.cpp,v 1.1 2006-06-13 14:07:02 fbecheri Exp $";
//+=============================================================================
//
// file :         GpibDeviceServerStateMachine.cpp
//
// description :  C++ source for the GpibDeviceServer and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author: fbecheri $
//
// $Revision: 1.1 $
//
// $Log: not supported by cvs2svn $
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <GpibDeviceServer.h>
#include <GpibDeviceServerClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace GpibDeviceServer_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================


//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Write_allowed
// 
// description : 	Execution allowed for Write command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Write_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Read_allowed
// 
// description : 	Execution allowed for Read command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Read_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Close_allowed
// 
// description : 	Execution allowed for Close command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Close_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_ReadLongString_allowed
// 
// description : 	Execution allowed for ReadLongString command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_ReadLongString_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_GetName_allowed
// 
// description : 	Execution allowed for GetName command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_GetName_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Local_allowed
// 
// description : 	Execution allowed for Local command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Local_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Remote_allowed
// 
// description : 	Execution allowed for Remote command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Remote_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Getiberr_allowed
// 
// description : 	Execution allowed for Getiberr command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Getiberr_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Getibsta_allowed
// 
// description : 	Execution allowed for Getibsta command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Getibsta_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Getibcnt_allowed
// 
// description : 	Execution allowed for Getibcnt command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Getibcnt_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Clear_allowed
// 
// description : 	Execution allowed for Clear command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Clear_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_SetTimeOut_allowed
// 
// description : 	Execution allowed for SetTimeOut command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_SetTimeOut_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_BCsendIFC_allowed
// 
// description : 	Execution allowed for BCsendIFC command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_BCsendIFC_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_BCclr_allowed
// 
// description : 	Execution allowed for BCclr command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_BCclr_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_GetDeviceID_allowed
// 
// description : 	Execution allowed for GetDeviceID command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_GetDeviceID_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_BCllo_allowed
// 
// description : 	Execution allowed for BCllo command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_BCllo_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_BCcmd_allowed
// 
// description : 	Execution allowed for BCcmd command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_BCcmd_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Open_allowed
// 
// description : 	Execution allowed for Open command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Open_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_OpenByName_allowed
// 
// description : 	Execution allowed for OpenByName command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_OpenByName_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_BCGetConnectedDeviceList_allowed
// 
// description : 	Execution allowed for BCGetConnectedDeviceList command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_BCGetConnectedDeviceList_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Trigger_allowed
// 
// description : 	Execution allowed for Trigger command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Trigger_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_WriteRead_allowed
// 
// description : 	Execution allowed for WriteRead command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_WriteRead_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_Config_allowed
// 
// description : 	Execution allowed for Config command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_Config_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_BCConfig_allowed
// 
// description : 	Execution allowed for BCConfig command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_BCConfig_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_SendBinData_allowed
// 
// description : 	Execution allowed for SendBinData command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_SendBinData_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GpibDeviceServer::is_ReceiveBinData_allowed
// 
// description : 	Execution allowed for ReceiveBinData command.
//
//-----------------------------------------------------------------------------
bool GpibDeviceServer::is_ReceiveBinData_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace GpibDeviceServer_ns
